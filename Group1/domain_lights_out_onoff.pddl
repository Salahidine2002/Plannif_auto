(define (domain lights_out)
    (:requirements :strips :typing)
    (:types light)
    (:predicates (adjacent ?l1 - light ?l2 - light)  (on ?l1 - light))
    (:action switch_off
        :parameters (?l1 - light)
        :precondition (on ?l1)
        :effect (and (not (on ?l1)) (forall (?l2 - light) (when (and (adjacent ?l1 ?l2) (not (on ?l2))) (on ?l2))) (forall (?l2 - light) (when (and (adjacent ?l1 ?l2) (on ?l2)) (not (on ?l2)))))
    )
     (:action switch_on
        :parameters (?l1 - light)
        :precondition (not (on ?l1))
        :effect (and (on ?l1) (forall (?l2 - light) (when (and (adjacent ?l1 ?l2) (not (on ?l2))) (on ?l2))) (forall (?l2 - light) (when (and (adjacent ?l1 ?l2) (on ?l2)) (not (on ?l2)))))
    )
)